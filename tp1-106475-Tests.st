TestCase subclass: #AlgovidAlumnoTest	instanceVariableNames: 'algovid persona persona1 persona2'	classVariableNames: ''	package: 'tp1-106475-Tests'!!AlgovidAlumnoTest methodsFor: 'running' stamp: 'GonzaRE 5/16/2021 21:14'!setUp	algovid := AlgoVid new.! !!AlgovidAlumnoTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 19:40'!test08DeRiesgoNocircula  algovid nuevaPersona: 'Diego'.algovid esPersonaDeRiesgo: 'Diego'.self deny: (algovid puedeCircular: 'Diego').	! !!AlgovidAlumnoTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 20:12'!test14EsencialContactoConSRiesgoAmbosSanosRiesgoNoCirculaEsencialSi  algovid nuevaPersona: 'Diego'.algovid nuevaPersona: 'Edson'.	algovid esPersonaDeRiesgo: 'Diego'. algovid esPersonalEsencial: 'Edson'. algovid contactoEstrechoEntre: 'Edson' y: 'Diego'. 	self deny: (algovid puedeCircular: 'Diego').	self assert: (algovid puedeCircular: 'Edson').	! !!AlgovidAlumnoTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 19:43'!test11EsencialEnBurbujaPinchadaNoCircula  algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.  algovid nuevaPersona: 'Santi'.   algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Santi' aLaBurbuja: 'Ayudantes Algo3'.  algovid esPersonalEsencial: 'Thiago'.  algovid agregarSintoma: 'Fiebre' a: 'Pablo'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Pablo'.  algovid agregarSintoma: 'Diarrea' a: 'Pablo'.  self assert: (algovid diagnosticoDe: 'Pablo') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo3').   self deny: (algovid puedeCircular: 'Thiago').! !!AlgovidAlumnoTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 21:19'!test15SiMitadDeLasBurbujasEstanPinchadasEntoncesLasClasesNoSonPresenciales  algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.   algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.  algovid nuevaPersona: 'Martín'.  algovid nuevaPersona: 'Cami'.  algovid nuevaBurbuja: 'Ayudantes Algo2'.  algovid agregarA: 'Martín' aLaBurbuja: 'Ayudantes Algo2'.  algovid agregarA: 'Cami' aLaBurbuja: 'Ayudantes Algo2'.  algovid nuevoColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo2' alColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo3' alColegio: 'UBA'.   algovid agregarSintoma: 'Fiebre' a: 'Cami'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Cami'.  algovid agregarSintoma: 'Tos' a: 'Cami'.   self assert: (algovid diagnosticoDe: 'Cami') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo2').   self deny: (algovid clasesPresencialesEn: 'UBA').! !!AlgovidAlumnoTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 19:47'!test12EsencialContactoConPositivoNoCircula  algovid nuevaPersona: 'Diego'.algovid nuevaPersona: 'Edson'.	algovid esPersonalEsencial: 'Edson'.   algovid agregarSintoma: 'Dolor de garganta' a: 'Diego'. algovid agregarSintoma: 'Dolor de estomago' a: 'Diego'. algovid agregarSintoma: 'Dolor de cabeza' a: 'Diego'. algovid agregarSintoma: 'Dolor de pie' a: 'Diego'.	  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Positivo'.   algovid contactoEstrechoEntre: 'Edson' y: 'Diego'. 	self deny: (algovid puedeCircular: 'Edson').	! !!AlgovidAlumnoTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 19:46'!test02VacunadoContactoConPositivoNoCirculaalgovid nuevaPersona: 'Edson'.algovid estaVacunadx:  'Edson'.  algovid nuevaPersona: 'Diego'.	   algovid agregarSintoma: 'Dolor de garganta' a: 'Diego'. algovid agregarSintoma: 'Dolor de estomago' a: 'Diego'. algovid agregarSintoma: 'Dolor de cabeza' a: 'Diego'. algovid agregarSintoma: 'Dolor de pie' a: 'Diego'.	  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Positivo'.   algovid contactoEstrechoEntre: 'Edson' y: 'Diego'. 	self deny: (algovid puedeCircular: 'Edson').	! !!AlgovidAlumnoTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 19:35'!test04VacunadoEnBurbujaPinchadaNoCircula  algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.  algovid nuevaPersona: 'Santi'.   algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Santi' aLaBurbuja: 'Ayudantes Algo3'.  algovid estaVacunadx: 'Thiago'.  algovid agregarSintoma: 'Fiebre' a: 'Pablo'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Pablo'.  algovid agregarSintoma: 'Diarrea' a: 'Pablo'.  self assert: (algovid diagnosticoDe: 'Pablo') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo3').   self deny: (algovid puedeCircular: 'Thiago').! !!AlgovidAlumnoTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 19:48'!test13EsencialContactoConSospechosoNoCircula  algovid nuevaPersona: 'Diego'.algovid nuevaPersona: 'Edson'.	 algovid esPersonalEsencial: 'Edson'.  algovid agregarSintoma: 'Dolor de garganta' a: 'Diego'.	  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Sospechoso'.   algovid contactoEstrechoEntre: 'Edson' y: 'Diego'. 	self deny: (algovid puedeCircular: 'Diego').	! !!AlgovidAlumnoTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 19:42'!test10DeRiesgoEsencialNocirculaCambioOrden  algovid nuevaPersona: 'Diego'.algovid esPersonalEsencial: 'Diego'.algovid esPersonaDeRiesgo: 'Diego'.self deny: (algovid puedeCircular: 'Diego').	! !!AlgovidAlumnoTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 19:34'!test03VacunadoContactoConSospechosoNoCircula  algovid nuevaPersona: 'Diego'.algovid nuevaPersona: 'Edson'.	algovid estaVacunadx: 'Edson'.   algovid agregarSintoma: 'Dolor de garganta' a: 'Diego'.algovid agregarSintoma: 'Fiebre' a: 'Diego'.algovid agregarSintoma: 'Dolor de panza' a: 'Diego'.algovid agregarSintoma: 'Dolor de ojos' a: 'Diego'.  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Positivo'.   algovid contactoEstrechoEntre: 'Edson' y: 'Diego'.   self deny: (algovid puedeCircular: 'Edson').	! !!AlgovidAlumnoTest methodsFor: 'tests' stamp: 'GonzaRE 5/21/2021 17:38'!test01NuevaPersonaSeGuardaEnColeccionAlgoviddePersonas|joan|algovid nuevaPersona: 'Nico'.algovid nuevaPersona: 'Paulo'.joan:=algovid nuevaPersona: 'Joan'.self assert: ((algovid buscarPersona: 'Joan')=joan).! !!AlgovidAlumnoTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 19:38'!test06IgualQue05PeroIntercambioContacto  algovid nuevaPersona: 'Diego'.     algovid agregarSintoma: 'Dolor de garganta' a: 'Diego'.algovid agregarSintoma: 'Dolor de panza' a: 'Diego'.algovid agregarSintoma: 'Dolor de nuca' a: 'Diego'.algovid agregarSintoma: 'Dolor de cabeza' a: 'Diego'.algovid agregarSintoma: 'Dolor de pierna' a: 'Diego'.    algovid nuevaPersona: 'Edson'.  algovid esPersonalEsencial: 'Edson'.  algovid contactoEstrechoEntre: 'Diego' y: 'Edson'.   self deny: (algovid puedeCircular: 'Edson').	self assert: (algovid diagnosticoDe: 'Diego') equals: 'Positivo'. ! !!AlgovidAlumnoTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 19:42'!test09DeRiesgoEsencialNocircula  algovid nuevaPersona: 'Diego'.algovid esPersonaDeRiesgo: 'Diego'.algovid esPersonalEsencial: 'Diego'.self deny: (algovid puedeCircular: 'Diego').	! !!AlgovidAlumnoTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 19:40'!test07VacunadoContactoConPositivoNoCircula  algovid nuevaPersona: 'Diego'.algovid nuevaPersona: 'Edson'.	   algovid agregarSintoma: 'Dolor de garganta' a: 'Diego'.	  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Sospechoso'.   algovid contactoEstrechoEntre: 'Edson' y: 'Diego'. 	self deny: (algovid puedeCircular: 'Diego').	! !!AlgovidAlumnoTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 19:36'!test05ContactoEstrechoConPositivoHaceSospechosoAlOtroYNoCircula  algovid nuevaPersona: 'Diego'.     algovid agregarSintoma: 'Dolor de garganta' a: 'Diego'.algovid agregarSintoma: 'Dolor de panza' a: 'Diego'.algovid agregarSintoma: 'Dolor de nuca' a: 'Diego'.algovid agregarSintoma: 'Dolor de cabeza' a: 'Diego'.algovid agregarSintoma: 'Dolor de pierna' a: 'Diego'.  algovid nuevaPersona: 'Edson'.  algovid esPersonalEsencial: 'Edson'.  algovid contactoEstrechoEntre: 'Edson' y: 'Diego'.   self deny: (algovid puedeCircular: 'Edson').	self assert: (algovid diagnosticoDe: 'Diego') equals: 'Positivo'. ! !TestCase subclass: #BurbujaNoExisteTest	instanceVariableNames: 'algovid'	classVariableNames: ''	package: 'tp1-106475-Tests'!!BurbujaNoExisteTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 22:22'!test02BurbujaPinchadaBurbujaInexistenteLanzaExcepcionBurbujaNoExisteself should: [algovid burbujaPinchada: 'Amigos' ] raise: BurbujaNoExiste.! !!BurbujaNoExisteTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 22:20'!test01AgregarPersonaABurbujaInexistenteLanzaExcepcionBurbujaNoExistealgovid nuevaPersona: 'Mati'.algovid nuevaBurbuja: 'Estudiantes'.self should: [algovid agregarA: 'Mati' aLaBurbuja: 'Amigos' ] raise: BurbujaNoExiste.! !!BurbujaNoExisteTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 22:23'!test02BuscarBurbujaBurbujaInexistenteLanzaExcepcionBurbujaNoExistealgovid nuevaBurbuja: 'Familia'.self should: [algovid buscarBurbuja: 'Amigos' ] raise: BurbujaNoExiste.! !!BurbujaNoExisteTest methodsFor: 'running' stamp: 'GonzaRE 5/17/2021 22:19'!setUp	algovid := AlgoVid new.! !TestCase subclass: #BurbujaRepetidaTest	instanceVariableNames: 'algovid'	classVariableNames: ''	package: 'tp1-106475-Tests'!!BurbujaRepetidaTest methodsFor: 'tests' stamp: 'GonzaRE 5/21/2021 17:48'!test01AgregarBurbujaRepetidaLanzaExcepcionBurbujaRepetidaalgovid nuevaBurbuja: 'Aula2'.self should: [algovid nuevaBurbuja: 'Aula2'] raise: BurbujaRepetida.! !!BurbujaRepetidaTest methodsFor: 'tests' stamp: 'GonzaRE 5/21/2021 17:48'!test02AgregarMuchasBurbujaYLuegoRepetidaLanzaExcepcionBurbujaRepetidaalgovid nuevaBurbuja: 'Aula1'.algovid nuevaBurbuja: 'Amigos'.algovid nuevaBurbuja: 'Club'.algovid nuevaBurbuja: 'Familia'.self should: [algovid nuevaBurbuja: 'Amigos'] raise: BurbujaRepetida.! !!BurbujaRepetidaTest methodsFor: 'running' stamp: 'GonzaRE 5/21/2021 17:47'!setUp	algovid := AlgoVid new.! !TestCase subclass: #BurbujaTest	instanceVariableNames: 'algovid'	classVariableNames: ''	package: 'tp1-106475-Tests'!!BurbujaTest methodsFor: 'running' stamp: 'GonzaRE 5/14/2021 11:22'!setUp	algovid := AlgoVid new.! !!BurbujaTest methodsFor: 'running' stamp: 'GonzaRE 5/16/2021 20:27'!test02SiAlguienEnLaBurbujaEsUnCasoSospechosoEntoncesLaBurbujaNoEstaPinchada  algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.  algovid nuevaPersona: 'Santi'.   algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Santi' aLaBurbuja: 'Ayudantes Algo3'.  algovid estaVacunadx: 'Thiago'.  algovid estaVacunadx: 'Pablo'.  algovid estaVacunadx: 'Santi'.  algovid agregarSintoma: 'Fiebre' a: 'Pablo'.  self assert: (algovid diagnosticoDe: 'Pablo') equals: 'Sospechoso'.   self deny: (algovid burbujaPinchada: 'Ayudantes Algo3'). ! !!BurbujaTest methodsFor: 'running' stamp: 'GonzaRE 5/17/2021 19:54'!test03SInhabilitarIntegrantesHaceQueIntegrantesNoCirculen|burbuja|  algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.  algovid nuevaPersona: 'Santi'.   burbuja:= algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Santi' aLaBurbuja: 'Ayudantes Algo3'.  algovid estaVacunadx: 'Thiago'.  algovid estaVacunadx: 'Pablo'.  algovid estaVacunadx: 'Santi'.	burbuja inhabilitarIntegrantes.  self assert: (algovid puedeCircular: 'Pablo') equals: false. 	self assert: (algovid puedeCircular: 'Thiago') equals: false. 	self assert: (algovid puedeCircular: 'Santi') equals: false. ! !!BurbujaTest methodsFor: 'running' stamp: 'GonzaRE 5/14/2021 11:23'!test01SiAlguienEnLaBurbujaEsUnCasoConfirmadoEntoncesLaBurbujaEstaPinchada  algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.  algovid nuevaPersona: 'Santi'.   algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Santi' aLaBurbuja: 'Ayudantes Algo3'.  algovid estaVacunadx: 'Thiago'.  algovid estaVacunadx: 'Pablo'.  algovid estaVacunadx: 'Santi'.  algovid agregarSintoma: 'Fiebre' a: 'Pablo'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Pablo'.  algovid agregarSintoma: 'Diarrea' a: 'Pablo'.  self assert: (algovid diagnosticoDe: 'Pablo') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo3'). ! !TestCase subclass: #ColegioNoExisteTest	instanceVariableNames: 'algovid'	classVariableNames: ''	package: 'tp1-106475-Tests'!!ColegioNoExisteTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 22:24'!test02HayBuscarColegioInexistenteLanzaExcepcionColegioNoExistealgovid nuevoColegio: 'Numero2'.self should: [algovid buscarColegio: 'Colegio Boca' ] raise: ColegioNoExiste.! !!ColegioNoExisteTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 22:24'!test03HayClasesEnColegioInexistenteLanzaExcepcionColegioNoExistealgovid nuevoColegio: 'Numero2'.self should: [algovid clasesPresencialesEn: 'Colegio Boca' ] raise: ColegioNoExiste.! !!ColegioNoExisteTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 22:18'!test01AgregarBurbujaAColegioInexistenteLanzaExcepcionColegioNoExistealgovid nuevoColegio: 'Numero2'.algovid nuevaBurbuja: 'Estudiantes'.self should: [algovid agregarA: 'Estudiantes' alColegio: 'Colegio Boca' ] raise: ColegioNoExiste.! !!ColegioNoExisteTest methodsFor: 'running' stamp: 'GonzaRE 5/17/2021 22:15'!setUp	algovid := AlgoVid new.! !TestCase subclass: #ColegioRepetidoTest	instanceVariableNames: 'algovid'	classVariableNames: ''	package: 'tp1-106475-Tests'!!ColegioRepetidoTest methodsFor: 'tests' stamp: 'GonzaRE 5/21/2021 17:46'!test02AgregarMuchosColegiosYLuegoRepetidoLanzaExcepcionColegioRepetidoalgovid nuevoColegio: 'Fiuba'.algovid nuevoColegio: 'Fmed'.algovid nuevoColegio: 'Economicas'.algovid nuevoColegio: 'Nacional'.self should: [algovid nuevoColegio: 'Nacional'] raise: ColegioRepetido.! !!ColegioRepetidoTest methodsFor: 'tests' stamp: 'GonzaRE 5/21/2021 17:46'!test01AgregarColegioRepetidoLanzaExcepcionColegioRepetidoalgovid nuevoColegio: 'Fiuba'.self should: [algovid nuevoColegio:'Fiuba'] raise: ColegioRepetido.! !!ColegioRepetidoTest methodsFor: 'running' stamp: 'GonzaRE 5/21/2021 17:43'!setUp	algovid := AlgoVid new.! !TestCase subclass: #ColegioTest	instanceVariableNames: 'algovid'	classVariableNames: ''	package: 'tp1-106475-Tests'!!ColegioTest methodsFor: 'running' stamp: 'GonzaRE 5/14/2021 12:29'!setUp	algovid := AlgoVid new.! !!ColegioTest methodsFor: 'running' stamp: 'GonzaRE 5/16/2021 20:42'!test02MitadBurbujasPinchadasNoHayClasesPresenciales|cole|	algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.   algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.   algovid nuevaPersona: 'Diego'.  algovid nuevaPersona: 'Valen'.  algovid nuevaBurbuja: 'Ayudantes Algo1'.  algovid agregarA: 'Diego' aLaBurbuja: 'Ayudantes Algo1'.  algovid agregarA: 'Valen' aLaBurbuja: 'Ayudantes Algo1'.  cole:=algovid nuevoColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo1' alColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo3' alColegio: 'UBA'.  algovid agregarSintoma: 'Fiebre' a: 'Diego'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Diego'.  algovid agregarSintoma: 'Tos' a: 'Diego'.  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo1'). 	self deny: (cole hayClasesPresenciales).! !!ColegioTest methodsFor: 'running' stamp: 'GonzaRE 5/16/2021 20:35'!test01xContarBurbujasPinchadas |cole|	algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.   algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.  algovid nuevaPersona: 'Martín'.  algovid nuevaPersona: 'Cami'.  algovid nuevaBurbuja: 'Ayudantes Algo2'.  algovid agregarA: 'Martín' aLaBurbuja: 'Ayudantes Algo2'.  algovid agregarA: 'Cami' aLaBurbuja: 'Ayudantes Algo2'.  algovid nuevaPersona: 'Diego'.  algovid nuevaPersona: 'Valen'.  algovid nuevaBurbuja: 'Ayudantes Algo1'.  algovid agregarA: 'Diego' aLaBurbuja: 'Ayudantes Algo1'.  algovid agregarA: 'Valen' aLaBurbuja: 'Ayudantes Algo1'.  cole:=algovid nuevoColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo1' alColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo2' alColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo3' alColegio: 'UBA'.  algovid agregarSintoma: 'Fiebre' a: 'Diego'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Diego'.  algovid agregarSintoma: 'Tos' a: 'Diego'.  algovid agregarSintoma: 'Fiebre' a: 'Cami'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Cami'.  algovid agregarSintoma: 'Tos' a: 'Cami'.  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo1').   self assert: (algovid diagnosticoDe: 'Cami') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo2'). 	self assert: (cole cantidadBurbujasPinchadas = 2).! !!ColegioTest methodsFor: 'running' stamp: 'GonzaRE 5/17/2021 20:09'!test03UnTercioBurbujasPinchadasHayClasesPresenciales|cole|	algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.   algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.   algovid nuevaPersona: 'Martín'.  algovid nuevaPersona: 'Cami'.  algovid nuevaBurbuja: 'Ayudantes Algo2'.  algovid agregarA: 'Martín' aLaBurbuja: 'Ayudantes Algo2'.  algovid agregarA: 'Cami' aLaBurbuja: 'Ayudantes Algo2'.  algovid nuevaPersona: 'Diego'.  algovid nuevaPersona: 'Valen'.  algovid nuevaBurbuja: 'Ayudantes Algo1'.  algovid agregarA: 'Diego' aLaBurbuja: 'Ayudantes Algo1'.  algovid agregarA: 'Valen' aLaBurbuja: 'Ayudantes Algo1'.  cole:=algovid nuevoColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo1' alColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo3' alColegio: 'UBA'.algovid agregarA: 'Ayudantes Algo2' alColegio: 'UBA'.  algovid agregarSintoma: 'Fiebre' a: 'Diego'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Diego'.  algovid agregarSintoma: 'Tos' a: 'Diego'.  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo1'). 	self assert: (cole hayClasesPresenciales).! !TestCase subclass: #EstadoSaludTest	instanceVariableNames: 'algovid persona'	classVariableNames: ''	package: 'tp1-106475-Tests'!!EstadoSaludTest methodsFor: 'running' stamp: 'GonzaRE 6/16/2021 16:55'!setUp	algovid := AlgoVid new.	persona := algovid nuevaPersona: 'Gonza'.! !!EstadoSaludTest methodsFor: 'tests' stamp: 'GonzaRE 6/16/2021 17:05'!test02PersonaSinSintomaNoTieneSintomaself assert: (persona obtenerCantSintomas = 0 ).! !!EstadoSaludTest methodsFor: 'tests' stamp: 'GonzaRE 6/16/2021 17:05'!test03PersonaConSintomaHabitualTieneSintomaHabitualpersona personaAgregarSintoma: 'Tos'. self assert: (persona obtenerCantSintomas = 1 ).self assert: (persona poseeSintomaHabitual)! !!EstadoSaludTest methodsFor: 'tests' stamp: 'GonzaRE 6/16/2021 17:54'!test04PersonaTieneTosTieneSintomaHabitualYesSospechosopersona personaAgregarSintoma: 'Tos'.self assert:(persona poseeSintomaHabitual) equals:true.self assert:(persona esSospechoso).self assert:(persona obtenerDiagnostico) equals: 'Sospechoso'.! !!EstadoSaludTest methodsFor: 'tests' stamp: 'GonzaRE 6/16/2021 17:54'!test05PersonaTiene3SintomasNoHabitualesConfirmadopersona personaAgregarSintoma: 'Tos'.persona personaAgregarSintoma: 'Fiebre'.persona personaAgregarSintoma: 'Cansancio'.self assert:(persona poseeSintomaHabitual) equals:true.self assert:(persona obtenerDiagnostico) equals: 'Positivo'.! !!EstadoSaludTest methodsFor: 'tests' stamp: 'GonzaRE 6/17/2021 18:56'!test01EsPersonaDeRiesgoNoCirculapersona esPersonaDeRiesgoPersona. self assert: (persona puedeCircular) equals: false.! !!EstadoSaludTest methodsFor: 'tests' stamp: 'GonzaRE 6/16/2021 17:54'!test06PersonaEsencial1SintomaSospechosopersona esPersonalEsencialPersona.persona personaAgregarSintoma: 'Tos'.self assert:(persona obtenerDiagnostico) equals: 'Sospechoso'.! !TestCase subclass: #PersonaNoExisteTest	instanceVariableNames: 'algovid'	classVariableNames: ''	package: 'tp1-106475-Tests'!!PersonaNoExisteTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 22:10'!test01BuscarPersonaInexistenteLanzaExcepcionPersonaNoExisteself should: [algovid diagnosticoDe: 'Mara'] raise: PersonaNoExiste.! !!PersonaNoExisteTest methodsFor: 'tests' stamp: 'GonzaRE 5/17/2021 22:10'!test02AgregarPersonaInexistenteABurbujaLanzaExcepcionPersonaNoExistealgovid nuevaPersona: 'Miguel'.algovid nuevaBurbuja: 'Amigos'.self should: [algovid agregarA: 'Paulo' aLaBurbuja:  'Amigos'] raise: PersonaNoExiste.! !!PersonaNoExisteTest methodsFor: 'running' stamp: 'GonzaRE 5/17/2021 22:06'!setUp	algovid := AlgoVid new.! !TestCase subclass: #PersonaRepetidaTest	instanceVariableNames: 'algovid'	classVariableNames: ''	package: 'tp1-106475-Tests'!!PersonaRepetidaTest methodsFor: 'tests' stamp: 'GonzaRE 5/21/2021 17:43'!test02AgregarMuchasPersonasYLuegoRepetidaLanzaExcepcionPersonaRepetidaalgovid nuevaPersona: 'Miguel'.algovid nuevaPersona: 'Pablo'.algovid nuevaPersona: 'Marcos'.algovid nuevaPersona: 'Juan'.self should: [algovid nuevaPersona: 'Marcos'] raise: PersonaRepetida.! !!PersonaRepetidaTest methodsFor: 'tests' stamp: 'GonzaRE 5/21/2021 17:42'!test01AgregarPersonaRepetidaLanzaExcepcionPersonaRepetidaalgovid nuevaPersona: 'Miguel'.self should: [algovid nuevaPersona: 'Miguel'] raise: PersonaRepetida.! !!PersonaRepetidaTest methodsFor: 'running' stamp: 'GonzaRE 5/21/2021 17:41'!setUp	algovid := AlgoVid new.! !TestCase subclass: #PersonaTest	instanceVariableNames: 'algovid persona'	classVariableNames: ''	package: 'tp1-106475-Tests'!!PersonaTest methodsFor: 'running' stamp: 'GonzaRE 5/16/2021 17:29'!setUp	algovid := AlgoVid new.	persona := algovid nuevaPersona: 'Gonza'.! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 5/11/2021 20:53'!test02PersonaNoVacunadaNoPuedeSalir  algovid nuevaPersona: 'Joaquin'.    self deny: (algovid puedeCircular: 'Joaquin').! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 6/17/2021 18:54'!test10EsencialDeRiesgoNoHabilitadopersona esPersonalEsencialPersona.persona esPersonaDeRiesgoPersona. self assert:(persona puedeCircular) equals:false.! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 6/17/2021 18:54'!test12ContactoEstrechoVacunadoconNoSospechosoNoInhabilita|persona2|persona vacunar.persona2 := algovid nuevaPersona: 'Pablo'. persona contactoCon: persona2.self assert:(persona puedeCircular) equals:true.! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 6/17/2021 18:54'!test14PerteneceBurbujaPinchadaMeInhabilita|burbuja santi|	persona vacunar.  santi := algovid nuevaPersona: 'Santi'.	santi personaAgregarSintoma: 'Fiebre'.	santi personaAgregarSintoma: 'Tos'.	santi personaAgregarSintoma: 'Mocos'.   burbuja := algovid nuevaBurbuja: 'Hinchas de Boca'.  algovid agregarA: 'Santi' aLaBurbuja: 'Hinchas de Boca'.  algovid agregarA: 'Gonza' aLaBurbuja: 'Hinchas de Boca'.	self assert:(santi obtenerDiagnostico  = 'Positivo').  self deny: (persona puedeCircular). ! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 6/17/2021 18:53'!test06PersonaTieneTosTieneSintomaHabitualYesSospechosoNoCHabilitadopersona personaAgregarSintoma: 'Tos'.self assert:(persona poseeSintomaHabitual) equals:true.self assert:(persona esSospechoso).self assert:(persona obtenerDiagnostico) equals: 'Sospechoso'.self assert:(persona puedeCircular) equals:false.! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 6/17/2021 18:54'!test08PersonaTiene5SintomasConfirmadoNoHabilitadopersona personaAgregarSintoma: 'Tos'.persona personaAgregarSintoma: 'Fiebre'.persona personaAgregarSintoma: 'Rinitis'.persona personaAgregarSintoma: 'Congestion Nasal'.persona personaAgregarSintoma: 'Mareo'.self assert:(persona poseeSintomaHabitual) equals:true.self assert:(persona obtenerDiagnostico) equals: 'Positivo'.self assert:(persona puedeCircular)equals:false.! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 6/17/2021 18:53'!test03EsPersonaDeRiesgoNoCirculapersona esPersonaDeRiesgoPersona. self assert: (persona puedeCircular) equals: false.! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 6/17/2021 18:53'!test04VacunarHabilitaAPersonaParaCircularpersona vacunar.self assert:(persona puedeCircular) equals:true.! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 6/17/2021 18:53'!test07PersonaTiene3SintomasNoHabitualYesSospechosoNoHabilitadopersona personaAgregarSintoma: 'Mareo'.persona personaAgregarSintoma: 'Dolor de Pecho'.persona personaAgregarSintoma: 'Diarrea'.self assert:(persona poseeSintomaHabitual) equals:false.self assert:(persona obtenerDiagnostico) equals: 'Sospechoso'.self assert:(persona puedeCircular) equals:false.! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 6/17/2021 18:54'!test11ContactoEstrechoconSospechosoInhabilita|persona2|persona vacunar.persona2 := algovid nuevaPersona: 'Pablo'.persona2 personaAgregarSintoma:'Tos'.  persona contactoCon: persona2.self assert:(persona puedeCircular) equals:false.! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 6/19/2021 22:00'!test09PersonaEsencial1SintomaNoHabilitadopersona esPersonalEsencialPersona.persona personaAgregarSintoma: 'Tos'.self assert:(persona esSospechoso).self assert:(persona obtenerDiagnostico) equals: 'Sospechoso'.self assert:(persona puedeCircular) equals:false.! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 6/17/2021 18:54'!test07PersonaTiene3SintomasNoHabitualesConfirmadoNoCHabilitadopersona personaAgregarSintoma: 'Tos'.persona personaAgregarSintoma: 'Fiebre'.persona personaAgregarSintoma: 'Cansancio'.self assert:(persona poseeSintomaHabitual) equals:true.self assert:(persona obtenerDiagnostico) equals: 'Positivo'.self assert:(persona puedeCircular) equals:false.! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 5/13/2021 19:42'!test04SintomaHabitualSeReconoce|cami|  cami := algovid nuevaPersona: 'Cami'.  algovid estaVacunadx: 'Cami'.  "Tres síntomas, pero uno habitual (fiebre, tos o cansancio) lo hace confirmado"   algovid agregarSintoma: 'Fiebre' a: 'Cami'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Cami'.self assert: (cami poseeSintomaHabitual )! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 5/21/2021 17:39'!test01NuevaPersonaSeGuardaEnColeccionAlgoviddePersonas|joan|algovid nuevaPersona: 'Nico'.algovid nuevaPersona: 'Paulo'.joan:=algovid nuevaPersona: 'Joan'.self assert: ((algovid buscarPersona: 'Joan')=joan).! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 5/16/2021 17:34'!test02NombrePersonaCoincideConColeccionAlgovidself assert: (persona obtenerNombre) equals: 'Gonza'.! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 6/17/2021 18:53'!test05PersonaNoVacunadaNoHabilitadaParaCircularself assert:(persona puedeCircular) equals:false.! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 6/17/2021 18:54'!test13ContactoEstrechoconPositivoInhabilita|persona2|persona esPersonalEsencialPersona.persona2 := algovid nuevaPersona: 'Pablo'.persona2 personaAgregarSintoma:'Tos'.  persona2 personaAgregarSintoma:'Rinitis'.  persona2 personaAgregarSintoma:'Cansancio'.  persona2 personaAgregarSintoma:'Mocos'.  persona contactoCon: persona2.self assert:(persona puedeCircular) equals:false.! !!PersonaTest methodsFor: 'tests' stamp: 'GonzaRE 6/17/2021 18:54'!test15PerteneceBurbujaConSospechosoPeroNoMeInhabilita|burbuja santi|	persona vacunar.  santi := algovid nuevaPersona: 'Santi'.	santi personaAgregarSintoma: 'Fiebre'.   burbuja := algovid nuevaBurbuja: 'Hinchas de Boca'.  algovid agregarA: 'Santi' aLaBurbuja: 'Hinchas de Boca'.  algovid agregarA: 'Gonza' aLaBurbuja: 'Hinchas de Boca'.	self assert:(santi esSospechoso).  self assert: (persona puedeCircular). ! !TestCase subclass: #SintomaTest	instanceVariableNames: 'algovid persona'	classVariableNames: ''	package: 'tp1-106475-Tests'!!SintomaTest methodsFor: 'running' stamp: 'GonzaRE 5/17/2021 20:01'!setUp	algovid := AlgoVid new.	persona := algovid nuevaPersona: 'Nico'.! !!SintomaTest methodsFor: 'running' stamp: 'GonzaRE 6/14/2021 13:01'!test03ClasificaCansancioComoHabitual|sintoma|sintoma := Sintoma new.sintoma agregarNombre: 'Cansancio'.sintoma clasificarSintoma.  self assert: (sintoma esHabitual) equals: true. ! !!SintomaTest methodsFor: 'running' stamp: 'GonzaRE 6/14/2021 13:01'!test04ClasificaVomitosComoNoHabitual|sintoma|sintoma := Sintoma new.sintoma agregarNombre: 'Vomitos'.sintoma clasificarSintoma.  self assert: (sintoma esHabitual) equals: false. ! !!SintomaTest methodsFor: 'running' stamp: 'GonzaRE 6/14/2021 13:00'!test01ClasificaTosComoHabitual|sintoma|sintoma := Sintoma new.sintoma agregarNombre: 'Tos'.sintoma clasificarSintoma.  self assert: (sintoma esHabitual) equals: true. ! !!SintomaTest methodsFor: 'running' stamp: 'GonzaRE 6/14/2021 13:01'!test02ClasificaFiebreComoHabitual|sintoma|sintoma := Sintoma new.sintoma agregarNombre: 'Fiebre'.sintoma clasificarSintoma.  self assert: (sintoma esHabitual) equals: true. ! !